.TH man_1_simple_shell  "august 2020"

.SH NAME
simple_shell - The Holberton school shell - Cohort 12

-SH PROLOG
.PP
A shell program is an application that allows interacting with the computer. In a shell the user can run programs and also redirect the input to come from a file and output to come from a file.

.SH SYNOPSIS
.B simple_shell format [[command line][argumment...]]...


.SH DESCRIPTION
.PP
The  simple_shell  is  a  our	interface  program for entering	expression sequences. The expressions are evaluated and a value is returned. Shells also provide programming constructions such as if, for, while, functions, variables etc.

.SS Overview
.PP
The shell is a command that reads lines from either a file or the terminal, interprets them, and generally executes other commands.  It is the program that is running when a user logs into the system (although a user can select a different shell with the chsh(1) command).

.SS Invocation
.PP
If no args are present and if the standard input of the shell is connected to a terminal, the shell is considered an interactive shell.  An interactive shell generally prompts before each command and handles programming and commanderrors differently (as described below).  When first starting, the shell inspectsargument 0, and if it begins with a dash ‘-’, the shell is also considered a login shell.  This is normally doneautomatically by the system when the user first logs in.  A login shell first readscommands from the files /etc/profile and .profile if they exist.  If the environment variable ENV is set on entry to aninteractive shell, or is set in the .profile of a login shell, the shell next readscommands from the file named in ENV.  Therefore, a user should place commands that are to be executed only at login time in the profile file, and commands that are executed for every interactive shell inside the ENVfile.  To set the ENV variable to some file, place the following line in your .profile of your home directory

.SS Commands
.PP
The shell interprets the words it reads according to a language, the specification of which is outside the scope of this man page (refer to the BNF in the POSIX 1003.2 document). Essentially though, a line is read and if the first word of the line (or after a control operator)is not a reserved word, then the shell has recognized a simple command.  Otherwise, a complexcommand or some other special construct may have been recognized.

.SS Simple Commands
.PP
If a simple command has been recognized, the shell perfoms the following actions:

.RS
.ns
1.      Leading words of the form “name=value” are stripped off and assigned to the    environment of the simple command.

2.      The remaining words are expanded as described in the section called “Expansions”, and the first remaining word is considered the command name and the command islocated. The remaining words are considered the arguments of the command.  If nocommand name resulted, then the “name=value” variable assignments recognized in item 1affect the current shell.
.RE

.SS Path Search
.PP
When locating a command, the shell first looks to see if it has a shell function by that name.Then it looks for a builtin command by that name.  If a builtin command is not found,one of two things happen:

.RS
.ns
1.      Command names containing a slash are simply executed without performing any searches.

2.      The shell searches each entry in PATH in turn for the command.  The value of the PATH variable should be a series of entries separated by colons.  Each entry consists of a directory name. The current directory may be indicated implicitly by an empty directory name, or explicitly by a single period.
.RE

.SS Command  Exit Status
.PP
Each command has an exit status that can influence the behaviour of other shell commands.  The paradigm is that a command exits with zero for normal or success, and non-zero forfailure,error, or a false indication.  The man page for each command should indicate the variousexit codes and what they mean.  Additionally, the builtin commands return exit codes, as does an executed shell function.

If a command consists entirely of variable assignments then the exit status of thecommand is that of the last command substitution if any, otherwise 0.

Errors that are detected by the shell, such as a syntax error, will cause the shell to exit with a non-zero exit status.  If the shell is not an interactive shell, the execution of the shell file will be aborted.  Otherwise the shell will return the exit status of the lastcommand executed, or if the exit builtin is used with a numeric argument, it will return the argument.

.SS ENVIRONMENT
.RS
.ns
        PATH    The default search path for executables.  See the above section Path Search.
..RE


.SH EXAMPLES
.RS
.SS In interactive mode
.B
 $ ./hsh
 #cisfun$ ls
 hsh main.c shell.c
 #cisfun$
.SS In non-interactive mode
.B
 $ echo "/bin/ls" | ./hsh
 hsh main.c shell.c
 $ echo "/bin/ls -a" | ./hsh
 . .. hsh main.c shell.c
 $

.SH SEE ALSO
http://1.droppdf.com/files/87BCs/the-linux-programming-interface.pdf
Linux programming interface, Michael Kerrisk.

https://www.cypress.com/file/54761/download
C language programming (second edition), Dennis Ritchie

.SH BUGS
If you found some issues or bugs please report to the AUTHORS

.SH AUTHOR

.br
Fabian Andres Carmona,
.B 2003@holbertonschool.com

.br
David Arias Fuentes,
.B 1808@holbertonschool.com
